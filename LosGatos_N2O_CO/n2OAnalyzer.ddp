U,n2o_Analyzer
I,input,0,input,numeric




ENDIO

F,Poll,0
function Poll(string out, until)
// this function will poll the port with given string and read
// the response until the given character.  Returns NULL (empty)
// if there is an error

if (argc < 2)
   throw("Invalid number of parameters")
endif
private string in
try
   // lock the port
   if (!LockPort())
      throw("Unable to lock port")
   endif
   // clear anything pending
   Purge()
   // output our string
   Write(out)
   // and read until the eol:
   in = ReadUntil(until) 
   // release the port
   UnlockPort()
   // and return the response
   return(in)
catch()
   // error occured
   UnlockPort()
   throw()
endcatch
// return NULL to indicate error.  This should never happen
// because of the throw() statement above
return(NULL)




ENDIO

E,OnLoad




ENDIO

E,OnUnload




ENDIO

E,OnReceive
if (strIn == chr(10))
   
   private string datain = ReadUntil(10)
   
   //because Conversions "aren't supported" for serial devices... convert ppm -> ppb
   local.channel.AddValue(strDevice,0,"Input_N2O",1,StrToDouble(Parse(datain,1,","))*1000) // CO_wet
   local.channel.AddValue(strDevice,0,"Input_N2O",2,StrToDouble(Parse(datain,7,","))*1000) // CO_dry
   local.channel.AddValue(strDevice,0,"Input_N2O",3,StrToDouble(Parse(datain,3,","))*1000) // N2O_wet
   local.channel.AddValue(strDevice,0,"Input_N2O",4,StrToDouble(Parse(datain,9,","))*1000) // N2O_dry
   local.channel.AddValue(strDevice,0,"Input_N2O",5,StrToDouble(Parse(datain,5,","))) // H2O
   
Endif



ENDIO

E,OnSend
function Poll(string out, until)
// this function will poll the port with given string and read
// the response until the given character.  Returns NULL (empty)
// if there is an error

if (argc < 2)
   throw("Invalid number of parameters")
endif
private string in
try
   // lock the port
   if (!LockPort())
      throw("Unable to lock port")
   endif
   // clear anything pending
   Purge()
   // output our string
   Write(out)
   // and read until the eol:
   in = ReadUntil(until) 
   // release the port
   UnlockPort()
   // and return the response
   return(in)
catch()
   // error occured
   UnlockPort()
   throw()
endcatch
// return NULL to indicate error.  This should never happen
// because of the throw() statement above
return(NULL)




ENDIO

