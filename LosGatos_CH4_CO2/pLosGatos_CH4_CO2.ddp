U,LosGatos_CH4_CO2
I,CH4 (ppm),0,input,numeric
//
// The MIT License
// Copyright (c) 2020 WSU Laboratory for Atmospheric Research
// https://mit-license.org/

ENDIO

I,CH4 (dry ppm),1,input,numeric

ENDIO

I,CO2 (ppm),2,input,numeric

ENDIO

I,CO2 (dry ppm),3,input,numeric

ENDIO

I,H2O (ppm),4,input,numeric

ENDIO

I,Cell pressure (Torr),5,input,numeric

ENDIO

I,Cell temperature (Celsius),6,input,numeric

ENDIO

I,Ambient temperature (Celsius),7,input,numeric

ENDIO

I,Ringdown 0 (usec),8,input,numeric

ENDIO

I,Ringdown 1 (usec),9,input,numeric

ENDIO


I,SD of CH4 (ppm),10,input,numeric

ENDIO

I,SD of CH4 (dry ppm),11,input,numeric

ENDIO

I,SD of CO2 (ppm),12,input,numeric

ENDIO

I,SD of CO2 (dry ppm),13,input,numeric

ENDIO

I,SD of H2O (ppm),14,input,numeric

ENDIO

I,SD of Cell pressure (Torr),15,input,numeric

ENDIO

I,SD of Cell temperature (Celsius),16,input,numeric

ENDIO

I,SD of Ambient temperature (Celsius),17,input,numeric

ENDIO

I,SD of Ringdown 0 (usec),18,input,numeric

ENDIO

I,SD of Ringdown 1 (usec),19,input,numeric

ENDIO


F,Poll,0
function Poll(string out, until)
// this function will poll the port with given string and read
// the response until the given character.  Returns NULL (empty)
// if there is an error

if (argc < 2)
   throw("Invalid number of parameters")
endif
private string in
try
   // lock the port
   if (!LockPort())
      throw("Unable to lock port")
   endif
   // clear anything pending
   Purge()
   // output our string
   Write(out)
   // and read until the eol:
   in = ReadUntil(until) 
   // release the port
   UnlockPort()
   // and return the response
   return(in)
catch()
   // error occured
   UnlockPort()
   throw()
endcatch
// return NULL to indicate error.  This should never happen
// because of the throw() statement above
return(NULL)




ENDIO

E,OnLoad
print("Loaded Los Gatos Research CH4/CO2/H2O analyzer on port "+Device.PortName)



ENDIO

E,OnUnload
print("Unloaded Los Gatos Research CH4/CO2/H2O analyzer on port "+Device.PortName)



ENDIO

E,OnReceive
if (strIn == chr(13))
   
   // HINT EOL contains both CR & LF
   private string datain = ReadUntil(13)
   private string vals = Parse(datain,-1,",")
   
   // HINT 0 is timestamp (ignored)
   Channel.AddValue(strDevice,0,"CH4 (ppm)",0,StrToDouble(vals[1]))
   Channel.AddValue(strDevice,0,"SD of CH4 (ppm)",0,StrToDouble(vals[2]))
   Channel.AddValue(strDevice,0,"H2O (ppm)",0,StrToDouble(vals[3]))
   Channel.AddValue(strDevice,0,"SD of H2O (ppm)",0,StrToDouble(vals[4]))
   Channel.AddValue(strDevice,0,"CO2 (ppm)",0,StrToDouble(vals[5]))
   Channel.AddValue(strDevice,0,"SD of CO2 (ppm)",0,StrToDouble(vals[6]))
   Channel.AddValue(strDevice,0,"CH4 (dry ppm)",0,StrToDouble(vals[7]))
   Channel.AddValue(strDevice,0,"SD of CH4 (dry ppm)",0,StrToDouble(vals[8]))
   Channel.AddValue(strDevice,0,"CO2 (dry ppm)",0,StrToDouble(vals[9]))
   Channel.AddValue(strDevice,0,"SD of CO2 (dry ppm)",0,StrToDouble(vals[10]))
   Channel.AddValue(strDevice,0,"Cell Pressure (Torr)",0,StrToDouble(vals[11]))
   Channel.AddValue(strDevice,0,"SD of Cell Pressure (Torr)",0,StrToDouble(vals[12]))
   Channel.AddValue(strDevice,0,"Cell Temperature (Celsius)",0,StrToDouble(vals[13]))
   Channel.AddValue(strDevice,0,"SD of Cell Temperature (Celsius)",0,StrToDouble(vals[14]))
   Channel.AddValue(strDevice,0,"Ambient Temperature (Celsius)",0,StrToDouble(vals[15]))
   Channel.AddValue(strDevice,0,"SD of Ambient Temperature (Celsius)",0,StrToDouble(vals[16]))
   Channel.AddValue(strDevice,0,"Ringdown 0 (usec)",0,StrToDouble(vals[17]))
   Channel.AddValue(strDevice,0,"SD of Ringdown 0 (usec)",0,StrToDouble(vals[18]))
   Channel.AddValue(strDevice,0,"Ringdown 1 (usec)",0,StrToDouble(vals[19]))
   Channel.AddValue(strDevice,0,"SD of Ringdown 1 (usec)",0,StrToDouble(vals[20]))
   
Endif



ENDIO

E,OnSend


ENDIO

